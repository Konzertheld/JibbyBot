;------------------------
; Core settings
;------------------------

; command_prefix :
;    The prefix used for the onDo commands in plugins
command_prefix = ","

; server :
;    host name of the server to which the bot should connect
server = irc.freenode.net

; port :
;    port on which the bot should connect, defaults to 6667 if none is
;    specified; if you don't know what this is for, just leave it blank
port = 6667

; username :
;    username to use for the bot
username = JibbyBot

; nick :
;    nick to use for the bot
nick = JibbyBot

; realname :
;    real name to use for the bot
realname = JibbyBot

; password :
;    server password to use when connecting; if you don't know what this is
;    for, just leave it blank
password =

; invisible :
;    boolean flag indicating whether or not to automatically send the +i
;    invisible mode request to the server. On supported servers, when the the
;    mode is set to +i, people can not get a list of channels bot is in.
invisible = true

; keepalive :
;    boolean flag indicating whether or not the bot should reconnect when it
;    gets disconnected from the server, defaults to false if not set, but
;    setting it to true is recommended.
;    if this is set to true, you should set timeout value to 6 or above.
;    if not, timeout would better be set to zero or a high number such as 15.
keepalive = true

; timeout :
;    defines the number of minutes to wait until a connection times out, if the
;    bot gets disconnected when it shouldn't (i.e. when your connection didn't
;    die), increase the timeout value so it waits longer before disconnecting.
;    0 means it will never time out, but if you use keepalive you should set
;    this to 6 or above.
timeout = 8

; gender :
;   M or F to indicate the gender of the bot for instances when the bot must
;   refer to itself in the third person for actions
gender = F

; curses :
;   boolean flag indicating whether or not the bot is allowed to use curses,
;   bad words, etc. defaults to false.
curses = true

; ignore :
;   a comma- or space-delimited list of hostmasks (may contain wildcards
;   using *) of users from which events should be ignored (i. e. not
;   processed by plugins), surrounded by double-quotes
ignore =

; plugins :
;    one of the following :
;      - all
;      - none
;      - all except LIST
;      - none except LIST
;    where LIST is a comma-delimited case-insensitive list of plugin short
;    names (i. e. plugin class names without the prepended Phergie_Plugin_
;    segment; for example, the short name for the Phergie_Plugin_Autojoin
;    class would be Autojoin)
; plugins = all
plugins = "all except Acronym, RemoteListener"

; debug :
;    boolean flag indicating whether or not debugging mode should be enabled
debug = true

; log :
;    path to a file to which debugging output will be written if debugging
;    mode is enabled
log = "/home/matt/phergie/phergie.log"

; driver :
;    path to the driver file that will connect and handle requests to and from
;    the IRC server. Do not change this setting unless you know what you're
;    doing. Currently only "Streams" is supported.
driver = "Streams"

;-----------------------------------------------------------------------------
; Acronym
;-----------------------------------------------------------------------------

; acronym.limit :
;    positive integer indicating the maximum number of possible meanings for
;    an acronym that should be displayed in a given instance (defaults to 5)
acronym.limit = 5

; acronym.filter :
;    comma- or space-delimited list of acronyms for which meanings should not
;    be returned
acronym.filter = ""

;-----------------------------------------------------------------------------
; Admin Command
;-----------------------------------------------------------------------------

; admincommand.admins :
;    a list of hostmasks containing wildcards that are granted access to the
;    bot's admin features, must be enclosed by double quotes and entries are
;    separated by spaces or commas
admincommand.admins = "*209.20.73.16 MattRead* *nikita.mattread.com *mattread.ca *unaffiliated/mellertime mikeliet* *about/apple/macbookpro/Caius michaelt*"

; admincommand.ops :
;    if set to true, chan operators are given admin rights
admincommand.ops = true

;-----------------------------------------------------------------------------
; Alternate Nick
;-----------------------------------------------------------------------------

; altnick.altnick0 :
;    alternate nicks to use for the bot in the event that the preferred nick
;    is unavailable; this setting may be repeated with a different number
;    (i. e. altnick1, altnick2, etc.)
altnick.altnick0 = BotJibby

;-----------------------------------------------------------------------------
; Auto Join
;-----------------------------------------------------------------------------

; autojoin.channels :
;    a comma-delimited list of channels which the bot should automatically
;    join upon successfully connecting
autojoin.channels = "#swhack, #habari, #bigjibby, #linuxoutlaws, #phergie, #gulbac"

; autojoin.invite :
;    whether or not the bot will join a channel if an OP sent an invite request
;    from that channel
autojoin.invite = true

; autojoin.kick :
;    whether or not to have the bot will rejoin a channel automatically when it
;    is kicked.
;    Note: The bot will not rejoin a channel if part is used
autojoin.kick = true

;-----------------------------------------------------------------------------
; Define 
;-----------------------------------------------------------------------------

; define.max_length
;    maximum length in characters for a returned definition
define.max_length = 200

;-----------------------------------------------------------------------------
; Feed Ticker
;-----------------------------------------------------------------------------

; feedticker.fetch :
;    the frequency, in minutes, at which the feeds are checked for new data;
;    the default is 30 minutes
feedticker.fetch = 15

; feedticker.post :
;    the frequency, in minutes, at which new feed entries in the queue will be
;    sent to the channel; the default is 5 minutes
feedticker.post = 5

; feedticker.smart_buffer :
;    if true, the new feed items are buffered until something happens on
;    the channel, indicating some kind of presence / readership is available
;    the default is true
feedticker.smart_buffer = true

; feedticker.format :
;    format of the feed output on the channel, it can use three variables
;      - %title% the article title
;      - %link% the article link
;      - %feed% the feed's channel title
;    if empty or unset it defaults to %title% [ %link% ]
feedticker.format = ""

;# Feed Ticker: Filter Settings #
; feedticker.filter_title:
;    a double quote-enclosed regex string filter; this is the global filter
;    setting used to filter the feed title of all the feeds
feedticker.filter_title = ""

; feedticker.filter_url :
;    a double quote-enclosed regex string filter; this is the global filter
;    setting used to filter the feed url of all the feeds
feedticker.filter_url = ""

; feedticker.filter_article:
;    a double quote-enclosed regex string filter; this is the global filter
;    setting used to filter the article title of all the feeds
feedticker.filter_article = ""

; feedticker.feed0 :
;    a double quote-enclosed comma-delimited list of feed URLs; this setting
;    may be repeated with a different number (i.e. feed1, feed2, etc.)
feedticker.feed0 = "https://trac.habariproject.org/habari/timeline?ticket=on&changeset=on&milestone=on&wiki=on&max=10&daysback=90&format=rss"
feedticker.feed1 = "https://trac.habariproject.org/habari-extras/timeline?ticket=on&changeset=on&milestone=on&wiki=on&max=10&daysback=90&format=rss"
feedticker.feed2 = "http://identi.ca/api/statusnet/groups/timeline/186.rss"

; feedticker.chans0 :
;    a comma- or space-delimited list of channels where the feedN should be
;    syndicated
feedticker.chans0 = "#habari"
feedticker.chans1 = "#habari"
feedticker.chans2 = "#linuxoutlaws"

; feedticker.filter_title0 :
;    a double quote-enclosed regex string filter; this setting allows you to
;    filter each feed title independently and  may be repeated with a different
;    number. (i.e. filter_title1, filter_title2, etc.)
feedticker.filter_title0 = ""

; feedticker.filter_url0 :
;    a double quote-enclosed regex string filter; this setting allows you to
;    filter each feed url independently and  may be repeated with a different
;    number. (i.e. filter_url1, filter_url2, etc.)
feedticker.filter_url0 = ""

; feedticker.filter_article0 :
;    a double quote-enclosed regex string filter; this setting allows you to
;    filter each article title independently and  may be repeated with a
;    different number. (i.e. filter_article1, filter_article2, etc.)
feedticker.filter_article0 = ""

;-----------------------------------------------------------------------------
; Karma
;-----------------------------------------------------------------------------

; karma.limit :
;   Maximum number of karma rating changes allowed per user, per term, per
;   day, or 0 for unlimited changes
karma.limit = 5

; karma.static :
;   If non-empty, the static karma response to use for the bot's nick
karma.static = ""

;-----------------------------------------------------------------------------
; Lart
;-----------------------------------------------------------------------------

; lart.admin_only :
; If true, then only admins and ops can add and remove larts from the bot but
; you can add specific hostasks to lart.admins to allow those people to add and
; remove larts regardless if admin only is enabled.
lart.admin_only = false

;-----------------------------------------------------------------------------
; NickServ
;-----------------------------------------------------------------------------

; nickserv.identify_message :
;   (Partial) message sent by NickServ to request identification from client.
nickserv.identify_message = "This nickname is registered."

; nickserv.password :
;    password to use when identifying the bot to the NickServ bot where
;    authentication will only take place if a non-empty password is specified
nickserv.password = pass

; nickserv.bot_nick :
;    The name of the bot that the server uses for Nickerv authentication.
;    Defaults to NickServ is left blank.
nickserv.bot_nick = "NickServ"

;-----------------------------------------------------------------------------
; Quit
;-----------------------------------------------------------------------------

; quit.reason :
;    custom reason message to use when quitting
quit.reason =

; quit.php_path :
;    path to the PHP executable when using restart or reboot to create a new
;    instance of Phergie. An empty value or setting it to "autodetect" will
;    will cause the bot to try to autodetect the path to PHP.
quit.php_path = "autodetect"

;-----------------------------------------------------------------------------
; SpellCheck
;-----------------------------------------------------------------------------

; spellcheck.lang :
;     dictionary language to use, defaults to en (English)
spellcheck.lang = "en"

; spellcheck.limit :
;     limit on the number of potential correct spellings to return, defaults
;     to 5
spellcheck.limit = 5

;-----------------------------------------------------------------------------
; Twitter
;-----------------------------------------------------------------------------
; username for twitter.com (posting)
twitter.user = jibbybot
; password for twitter.com (posting)
twitter.password = password
; change class for other services (such as Twitter_Laconica)
;twitter.class = Twitter
; supply URL for non-identica laconica instances
;twitter.url = http://army.twit.tv/
; require admin to tweet?
;twitter.tweetrequireadmin = true

;-----------------------------------------------------------------------------
; URL
;-----------------------------------------------------------------------------

; url.base_format :
;    format for the message output on the channel, it can use two variables
;      - %nick% the user's nick name
;      - %message% the link message data as defined in url.message_format
;    if empty or unset it defaults to %nick%: %message%
url.base_format = "%nick%: %message%"

; url.message_format :
;    format of the message output on the channel, it can use three variables;
;    this is used for each individual link posted
;      - %nick% the user's nick name
;      - %title% the page title
;      - %link% the page link
;    if empty or unset it defaults to [ %link% ] %title%
url.message_format = "[ %link% ] %title%"

; url.merge_links :
;    whether or not to merge multiple links in one message as one message or
;    each if each link should have its own message
;    if empty or unset it defaults to true
url.merge_links = true

; url.show_errors :
;    whether or not to display URL results for URLs that return a HTTP or
;    connection error.
;    if empty or unset it defaults to true
url.show_errors = true

; url.title_length :
;    character length to which URL titles should be truncated
url.title_length = 40

; url.detect_schemeless :
;    if set to true, URLs that do not start with http:// such as "example.com"
;    will be detected
;    if empty or unset it defaults to false
url.detect_schemeless = false

;-----------------------------------------------------------------------------
; Weather
;-----------------------------------------------------------------------------

; weather.partner_id
;    Partner ID provided by weather.com
;    see http://www.weather.com/services/xmloap.html for more details
weather.partner_id = 1111709458

; weather.license_key
;    License Key provided by weather.com
;    see http://www.weather.com/services/xmloap.html for more details
weather.license_key = 0c554c35ea42d9ce

;-----------------------------------------------------------------------------
; Translate
;-----------------------------------------------------------------------------

; translate.default_lang
;    The default language to translate to when when none is provided. Must be
;    a valid language code supported by Google. (Defaults to "en")
;    see http://translate.google.com/ for supported languages.
translate.default_lang = "en"

;-----------------------------------------------------------------------------
; AudioScrobbler
;-----------------------------------------------------------------------------

; audioscrobbler.lastfm_api_key
;    The API key provided to you by Last.FM
;    see http://www.last.fm/api/
audioscrobbler.lastfm_api_key = "b25b959554ed76058ac220b7b2e0a026"

; audioscrobbler.librefm_api_key
;    The API key provided to you by Libre.FM
;    see http://www.libre.fm/api/
audioscrobbler.librefm_api_key = "b25b959554ed76058ac220b7b2e0a026"

trac.url = "https://trac.habariproject.org/habari/"
trac.name = Habari

remotelistener.port = 30601
remotelistener.host = "76.74.129.134"
remotelistener.channel = "#habari"
